{{template "base" .}}

{{define "title"}}
    {{index .StringMap "title"}}
{{end}}

{{define "content"}}
    <h2 class="mt-5">{{index .StringMap "title"}}</h2>
    <span id="{{index .StringMap "status"}}" class="badge {{index .StringMap "bg-status"}} d-none">{{index .StringMap "status"}}</span>
    <span id="charged" class="badge bg-success d-none">Charged</span>
    <hr>
    <div class="alert alert-danger text-center d-none" id="messages"></div>
    <div>
        <strong>Order No: </strong><span id="order-no"></span><br>
        <strong>Customer: </strong><span id="customer"></span><br>
        <strong>Product: </strong><span id="product"></span><br>
        <strong>Quantity: </strong><span id="quantity"></span><br>
        <strong>Total Sale: </strong><span id="amount"></span><br>
    </div>
    <hr>
    <a class="btn btn-info" href='{{index .StringMap "cancel"}}'>Cancel</a>
    <a id="refund-btn" class="btn btn-warning d-none" href="#!">{{index .StringMap "refund-btn"}}</a>

    <input type="hidden" id="pi" value="">
    <input type="hidden" id="charge-amount" value="">
    <input type="hidden" id="currency" value="">

{{end}}

{{define "js"}}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
let token = localStorage.getItem("token");
let id = window.location.pathname.split("/").pop();
let messages = document.getElementById("messages");

showError = (msg) => {
    messages.classList.add("alert-danger");
    messages.classList.remove("alert-success");
    messages.classList.remove("d-none");
    messages.innerText = msg;
} 

showSuccess = (msg) => {
    messages.classList.add("alert-success");
    messages.classList.remove("alert-danger");
    messages.classList.remove("d-none");
    messages.innerText = msg;

}

document.addEventListener("DOMContentLoaded", ()=>{
    console.log("ID is", id)
    const requestOptions = {
        method: 'post',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token,
        },
    }

    fetch("{{.API}}/api/admin/get-sale/" + id, requestOptions)
    .then(resp => resp.json())
    .then((data) => {
        console.log(data);
        if (data) {
            document.getElementById("order-no").innerHTML = data.id;
            document.getElementById("customer").innerHTML = data.customer.first_name + " " + data.customer.last_name;
            document.getElementById("product").innerHTML = data.item.name;
            document.getElementById("quantity").innerHTML = data.quantity;
            document.getElementById("amount").innerHTML = formatCurrency(data.transaction.amount);
            document.getElementById("pi").value = data.transaction.payment_intent;
            document.getElementById("charge-amount").value = data.transaction.amount;
            document.getElementById("currency").value = data.transaction.currency;
            if (data.status_id === 1) {
                document.getElementById("refund-btn").classList.remove("d-none");
                document.getElementById("charged").classList.remove("d-none");
            } else if (data.status_id === 2) {
                document.getElementById("{{index .StringMap "status"}}").classList.remove("d-none");
            } else {
                document.getElementById("cancelled").classList.remove("d-none");
            }
        }

    });

   
})

formatCurrency = (amount) => {
    let c = parseFloat(amount/100);
    return c.toLocaleString("en-US", {
        style: "currency",
        currency: "USD",
    })
}

document.getElementById("refund-btn").addEventListener("click", ()=>{
    Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to undo this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "{{index .StringMap "refund-btn"}}"
    }).then((result) => {
        if (result.isConfirmed) {
            let payload = {
                pi: document.getElementById("pi").value,
                currency: document.getElementById("currency").value,
                amount: parseInt(document.getElementById("charge-amount").value, 10),
                id: parseInt(id, 10),
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,
                },
                body: JSON.stringify(payload),
            }
            console.log(requestOptions);
            fetch("{{.API}}{{index .StringMap "refund-url"}}", requestOptions)
            .then(resp => resp.json())
            .then(function(data) {
                console.log(data);
                if (data.error == false) {
                    showSuccess("{{index .StringMap "messages"}}");
                    document.getElementById("refund-btn").classList.add("d-none");
                    document.getElementById("{{index .StringMap "status"}}").classList.remove("d-none");
                    document.getElementById("charged").classList.add("d-none");
                    Swal.fire({
                        title: "{{index .StringMap "messages"}}!",
                        text: "{{index .StringMap "text"}}",
                        icon: "success"
                    });
                } else {
                    stripeData = JSON.parse(data.message);
                    showError(stripeData.message);
                    Swal.fire({
                        title: "Duplicate occurences!",
                        text: "Your order has been taken care of.",
                        icon: "info"
                    });
                }
            })
            
        }
    });
})
</script>
{{end}}