{{define "base"}}
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <title>
    {{block "title" .}}
    
    {{end}}
    </title>
    {{/* Alternative way to handle checking auth before middleware */}}
    {{/* <script>
    function checkAuth() {
      if (localStorage.getItem("token") === null) {
        location.href = "/login";
        return
      } else {
        let token = localStorage.getItem("token");
        const myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");
        myHeaders.append("Authorization", "Bearer "+token);

        const requestOptions = {
          method: "POST",
          headers: myHeaders,
        }

        fetch("{{.API}}/api/is-authenticated", requestOptions)
        .then(res => res.json())
        .then(function(data){
          if (data.error === true) {
            console.log("not logged in");
            location.href = "/login";
          } else {
            console.log("Logged in");
          }
        })
      }
    }
  </script>
    {{block "in-head" .}} {{end}} */}}
 
  </head>
  <body>

  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Ecommerce</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/">Home</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Products
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="/item/1">Limited Time</a></li>
              <li><a class="dropdown-item" href="/plans/bronze">Subscription</a></li>
              
            </ul>
          </li>
          {{/* <li id="vt-link" class="nav-item d-none">
            <a class="nav-link" href="/admin/virtual-terminal">Virtual Terminal</a>
          </li> */}}
          {{if eq .IsAuthenticated 1}}
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Admin
              </a>
              <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <li><a class="dropdown-item" href="/admin/virtual-terminal">Virtual Terminal</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="/admin/all-sales">All Sales</a></li>
                <li><a class="dropdown-item" href="/admin/all-subscriptions">All Subscriptions</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="/admin/all-users">All Users</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="/logout">Logout</a></li>
                
              </ul>
            </li>
          {{end}}
        </ul>
        {{/* <form class="d-flex">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form> */}}
        {{if eq .IsAuthenticated 1}}
          <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
            <li id="login-link" class="nav-item">
              <a class="nav-link" href="/logout">Logout</a>
            </li>
          </ul>
        {{else}}
          <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
            <li id="login-link" class="nav-item">
              <a class="nav-link" href="/login">Login</a>
            </li>
          </ul>
        {{end}}
      </div>
    </div>
  </nav>
    <div class="container">
        <div class="row">
            <div class="col">
                {{block "content" .}} {{end}}
            </div>
        </div>
    </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
  <script>
    // logic for toggling login and logout link 
    {{/* let loginLink = document.getElementById("login-link");
    let vtLink = document.getElementById("vt-link");

    document.addEventListener("DOMContentLoaded", function() {
      if (localStorage.getItem("token") != null) {
        loginLink.innerHTML = '<a class="nav-link" onclick="logout()" href="#!">Logout</a>';
        vtLink.classList.remove("d-none")
      } else {
        loginLink.innerHTML = '<a class="nav-link" href="/login">Login</a>';
      }
      loginLink.classList.remove("d-none")
    }) */}}
    
    {{if eq .IsAuthenticated 1}}
    let socket;

      document.addEventListener("DOMContentLoaded", function(){
        socket = new WebSocket("ws://localhost:4000/ws")

        socket.onopen = () => {
          console.log("Successfully connected to websockets");
        }
        socket.onclose = e => {};
        socket.onerror = error => {};
        socket.onmessage = msg => {
          let data = JSON.parse(msg.data);
          switch (data.action) {
            case "logout":
              if (data.user_id === {{.UserID}}){
                logout();
              }
              break;
            default:
          }
        }
      })
    {{end}}

    function logout() {
      localStorage.removeItem("token");
      localStorage.removeItem("token_expiry");
      location.href = "/logout";
    }

    function checkAuth() {
      if (localStorage.getItem("token") === null) {
      location.href = "/login";
      return
      } else {
        let token = localStorage.getItem("token");
        const myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");
        myHeaders.append("Authorization", "Bearer "+token);

        const requestOptions = {
          method: "POST",
          headers: myHeaders,
        }

        fetch("{{.API}}/api/is-authenticated", requestOptions)
        .then(res => res.json())
        .then(function(data){
          if (data.error === true) {
            console.log("not logged in");
            location.href = "/login";
          } else {
            console.log("Logged in");
          }
        })
      }
    }
  </script>
  {{block "js" .}}

  {{end}}
  </body>
</html>
{{end}}